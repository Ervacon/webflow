<!--
	Ant build script for the Spring Web Flow.

	@author Erwin Vervaet
-->
<project name="Spring Web Flow" basedir="." default="build">

	<!--
		Version number of the build that will be generated.
	-->
	<property name="version" value="1.0.0"/>

	<!--
		The build classpath definition.
	-->
	<path id="buildClassPath">
		<pathelement location="build/src"/>
		<pathelement location="build/test"/>
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!--
		Clean up all artifacts generated by the build script.
	-->
	<target name="clean">
		<delete dir="build" failonerror="false"/>
	</target>

	<!--
		Initialize the working directory. All generated output
		will end up in the "build" directory.
	-->
	<target name="init" depends="clean">
		<mkdir dir="build"/>
		<mkdir dir="build/src"/>
		<mkdir dir="build/test"/>
	</target>

	<!--
		Compile all sources.
	-->
	<target name="compile" depends="init">
		<copy todir="build/src">
			<fileset dir="src">
				<include name="**/*.*"/>
				<exclude name="**/*.java"/>
				<exclude name="**/package.html"/>
			</fileset>
		</copy>
		<copy todir="build/src/META-INF">
			<fileset file="license.txt"/>
		</copy>
		<copy todir="build/test">
			<fileset dir="test">
				<include name="**/*.*"/>
				<exclude name="**/*.java"/>
				<exclude name="**/package.html"/>
			</fileset>
		</copy>
		<javac srcdir="src" destdir="build/src" debug="true">
			<classpath refid="buildClassPath"/>
		</javac>
		<javac srcdir="test" destdir="build/test">
			<classpath refid="buildClassPath"/>
		</javac>
	</target>

	<!--
		Run all unit tests.
	-->
	<target name="test" depends="compile">
		<junit printsummary="true" haltonerror="false" haltonfailure="false">
			<classpath refid="buildClassPath"/>
			<!--formatter type="plain" usefile="false"/-->
			<batchtest>
				<fileset dir="build/test">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!--
		Create a jar library.
	-->
	<target name="jar" depends="test">
		<jar jarfile="build/webflow-${version}.jar" basedir="build/src" includes="**/*.*">
			<manifest>
				<attribute name="Package" value="com.ervacon.springframework.web.servlet.mvc.webflow"/>
				<attribute name="Extension-Name" value="webflow"/>
				<attribute name="Specification-Title" value="Spring Web Flow"/>
				<attribute name="Specification-Vendor" value="Ervacon"/>
				<attribute name="Implementation-Title" value="com.ervacon.springframework.web.servlet.mvc.webflow"/>
				<attribute name="Implementation-Vendor" value="Ervacon"/>
				<attribute name="Implementation-Version" value="${version}"/>
			</manifest>
		</jar>
	</target>

	<!--
		Pack the sources together in a source zip file.
	-->
	<target name="src" depends="init">
		<zip zipfile="build/webflow-${version}-src.zip">
			<fileset dir=".">
				<include name="**/*.*"/>
				<exclude name="target/**/*.*"/>
				<exclude name="build/**/*.*"/>
				<exclude name="lib/**/*.*"/>
				<exclude name="**/.*"/>
				<exclude name="samples/**/*.*"/>
			</fileset>
		</zip>
	</target>

	<!--
		Generate JavaDoc documentation.
	-->
	<target name="javadoc" depends="init">
		<javadoc
			packagenames="com.ervacon.springframework.web.servlet.mvc.webflow*" sourcepath="src" destdir="build/javadoc"
			protected="true" author="true"
			doctitle="Spring Web Flow ${version}" windowtitle="Spring Web Flow ${version}"
			overview="overview.html">
			<classpath refid="buildClassPath"/>
		</javadoc>
	</target>

	<!--
		Package the build.
	-->
	<target name="package" depends="jar,src,javadoc">
		<zip zipfile="build/springwebflow${version}.zip">
			<fileset dir="build">
				<include name="javadoc/**/*"/>
				<include name="webflow-${version}.jar"/>
				<include name="webflow-${version}-src.zip"/>
			</fileset>
			<fileset file="readme.txt"/>
			<fileset file="build/src/com/ervacon/springframework/web/servlet/mvc/webflow/web-flow.dtd"/>
			<fileset file="license.txt"/>
			<fileset file="changelog.txt"/>
			<fileset dir=".">
				<include name="samples/**/*.*"/>
			</fileset>
		</zip>
	</target>

	<!--
		Do a complete build.
	-->
	<target name="build" depends="package">
	</target>

</project>